[project]
name = "knee-sarg"
version = "1.0.0"
authors = [{ name = "Matt McCormick" }]
dependencies = [
    "dagster-dbt==0.23.16",
    "dagster-duckdb-polars==0.23.16",
    "dagster-duckdb",
    "dagster>=1.7,<2.0",
    "dagster-ssh",
    "datasets",
    "dbt-core",
    "dbt-duckdb",
    "duckdb==1.0.0",
    "huggingface_hub",
    "httpx[http2]",
    "pyarrow",
    "python-slugify",
    "tenacity",
    "itk>=5.4.0,<6",
    "ngff-zarr[itk,dask-image]>=0.8.7,<0.9",
]

requires-python = ">=3.11, <=3.13"
readme = "README.md"
license = { text = "MIT" }

[project.urls]
Homepage = "https://radiogenomics.github.io/knee-sarg/"
Changelog = "https://github.com/open-radiogenomics/knee-sarg/commits/main/"
Issues = "https://github.com/open-radiogenomics/knee-sarg/issues"
CI = "https://github.com/open-radiogenomics/knee-sarg/actions"

[project.optional-dependencies]
dev = ["dagster-webserver", "ruff"]

[build-system]
requires = ["setuptools"]
build-backend = "setuptools.build_meta"

[tool.setuptools]
packages = ["knee_sarg"]

[tool.setuptools.package-data]
"knee_sarg" = ["../dbt/**"]

[tool.dagster]
module_name = "knee_sarg"

[tool.ruff.lint.isort]
case-sensitive = true
combine-as-imports = true
length-sort = true

[tool.pixi.project]
channels = ["conda-forge"]
platforms = ["win-64", "linux-64"]

[tool.pixi.pypi-dependencies]
knee-sarg = { path = ".", editable = true }

[tool.pixi.environments]
default = { solve-group = "default" }
dev = { features = ["dev"], solve-group = "default" }

[tool.pixi.tasks]
stage-samples = { cmd = "dagster job execute -j stage_oai_nsclc_radiogenomic_samples -m knee_sarg", description = "Stage OAI Radiogenomic Samples" }
clean = { cmd = "rm -rf data/*.parquet data/*.duckdb dbt/target dbt/dbt_packages dbt/logs", description = "Clean the project artifacts" }

[tool.pixi.feature.dev.tasks]
dev = { cmd = "dagster dev", description = "Run the development environment" }
lint = { cmd = "ruff check .", description = "Run ruff to check linting issues" }
fix = { cmd = "ruff check . --fix", description = "Run ruff to fix linting issues" }
format = { cmd = "ruff format", description = "Run ruff to format code" }
check-format = { cmd = "ruff format --check", description = "Run ruff to check code formating" }


[tool.pixi.dependencies]
s5cmd = ">=2.2.2,<3"
